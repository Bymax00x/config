" vimperatorrc

"""""""""""""""""""""
" option
"""""""""""""""""""""

" t : Open tabs
" S : Search engine suggestions
" l : Firefox location bar entries
set complete=tSl

colorscheme sweets_snaka

" n: tab number
" r: right scrollbar
" b: bottom scrollbar
set guioptions=nrb

set focuscontent

" open popups in the current tab
set popups=""

" disable bell
set visualbell
highlight Bell display: none

"""""""""""""""""""""
" map
"""""""""""""""""""""

noremap <C-i>  <TAB>
cnoremap <C-i>  <TAB>

noremap <C-h>  <BS>
cnoremap <C-h>  <BS>
inoremap <C-h>  <BS>

noremap <C-k>  <ESC>
cnoremap <C-k>  <ESC>
inoremap <C-k>  <ESC>


"""""""""""""""""""""
" scroll
"""""""""""""""""""""

" reset number of lines to scroll 
set scroll=0

noremap j 4j
noremap k 4k

noremap J <C-d>
noremap d <C-d>

noremap K <C-u>
noremap u <C-u>

noremap f <C-f>
noremap b <C-b>

noremap sm '


" open link in current tab
noremap o f
" open link in new tab
noremap t F

noremap . r

" tab
cnoremap <C-n> <Tab>
cnoremap <C-p> <S-Tab>

noremap i gt
noremap e gt

noremap l <C-n>
noremap h <C-p>

noremap w d
noremap su u

map <silent> gh :tabmove! -1<CR>
map <silent> gl :tabmove! +1<CR>


" set guioptions on/off
map <silent> sgo :set guioptions+=mT<CR>
map <silent> sgf :set guioptions-=mT<CR>

" pass-through pages
" jsdo.it edit page
autocmd LocationChange .* :js modes.passAllKeys = /^http:\/\/jsdo\.it\/[^\/]+\/[^\/]+\/edit/.test(buffer.URL)
" hatena diary edit page
autocmd LocationChange .* :js modes.passAllKeys = /^http:\/\/d\.hatena\.ne\.jp\/[^\/]+\/edit/.test(buffer.URL)
" google docs
autocmd LocationChange .* :js modes.passAllKeys = /^https?:\/\/docs\.google\.com\//.test(buffer.URL)
autocmd LocationChange .* :js modes.passAllKeys = /^https?:\/\/spreadsheets\.google\.com\//.test(buffer.URL)


"""""""""""""""""""""
" For plugins
"""""""""""""""""""""

" feedSomeKeys_3.js
command! -nargs=+ lazy autocmd VimperatorEnter .* <args>
lazy fmaps -u='mail\.google\.com/mail' c / j k n p o u e x s r a # [ ] ? gi gs gt gd ga gc
lazy fmaps -u='(fastladder|livedoor)\.com/reader' j k s a p o v c i p <Space> <S-Space> z b < > q w e g ?
lazy fmaps -u='www\.google\.com/calendar/' -events=vkeydown t a d w m x c e <Del> / + q s ?
lazy fmaps -u='https?://twitter\.com/' f r t m n <Enter> ? j k <Space> / . gh gr gp gf gm gu

" hatena bookmark
javascript <<EOF
liberator.globalVariables.hBookmark_shortcuts = {
    hintsAdd : 'c',
    hintsComment : ',c',
    add : ['c'],
    comment : [',c'],
};
EOF

javascript if (typeof hBookmark != 'undefined') liberator.loadScript('chrome://hatenabookmark/content/vimperator/plugin/hatenabookmark.js', {__proto__: this});

" migemo_hint.js
set hintmatching=custom

" copy.js
js <<EOF
if (! my_utils) {
    var my_utils = {};
}

my_utils.encodeFormData = function(data) {
    var pairs = [];
    var spaceRegex = /%20/g;
    var pair;

    for (var name in data) {
        if (data.hasOwnProperty(name)) {
            var pair = encodeURIComponent(name).replace(spaceRegex, "+") + "=" +
                       encodeURIComponent(data[name]).replace(spaceRegex, "+");
            pairs.push(pair);
        }
    }

    // return empty string if data is null or empty object.
    return pairs.join("&");
};

// data are encoded in this function
my_utils.httpPost = function(url, data, callback) {
    try {
        var xhr = new XMLHttpRequest();
        xhr.mozBackgroundRequest = true;

        if (callback) {
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    callback(xhr);
                }
            }
        }

        xhr.open("POST", url, !!callback);
        xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        xhr.send(my_utils.encodeFormData(data));

        return xhr;
    } catch (e) {
        liberator.log("Error opening " + url + ": " + e, 1);
        return null;
    }
};

my_utils.getGoogleShortUrl = function() {
    var ret = "";
    var response;
    var data = {"url": buffer.URL};
    var xhr = my_utils.httpPost("http://goo.gl/api/url", data);
    // xhr.status will be '201 Created'
    if (xhr) {
        response = JSON.parse(xhr.responseText);
        if (response.short_url) {
            ret = response.short_url;
        }
    }
    return ret;
};

liberator.globalVariables.copy_templates = [
    { label: 'Hatena-Title', value: '[%URL%:title=%TITLE%]' },
    { label: 'Hatena-Quote', value: '>%URL%:title=%TITLE%>\n%SEL%\n<<' },
    { label: 'Title : URL', value: '%TITLE% : %URL%' },
    { label: 'goo.gl', value: 'get goo.gl short url', custom: my_utils.getGoogleShortUrl },
    { label: 'tweet', value: 'title shorturl',
        custom: function() {
            return content.document.title + ' ' + my_utils.getGoogleShortUrl();
        }
    }
];
EOF

" multi_requester.js
js <<EOF
liberator.globalVariables.multi_requester_mappings = [
    [',ma', 'alc'],
];
EOF

" hatena_highlight.js
" clear search highlight automatically
:autocmd PageLoad 'd\.hatena\.ne\.jp' :nohatenahighlight
:autocmd PageLoad 'g\.hatena\.ne\.jp' :nohatenahighlight

source! ~/.vimperatorrc.local

" vim: set ts=4 sw=4 sts=0 ft=vimperator:
